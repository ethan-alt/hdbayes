% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/glm_logml_leap.R
\name{glm.logml.leap}
\alias{glm.logml.leap}
\title{Log marginal likelihood of a GLM under Latent Exchangeability Prior (LEAP)}
\usage{
glm.logml.leap(
  post.samples,
  formula,
  family,
  data.list,
  K = 2,
  prob.conc = NULL,
  offset.list = NULL,
  beta.mean = NULL,
  beta.sd = NULL,
  disp.mean = NULL,
  disp.sd = NULL,
  bridge.args = NULL,
  iter_warmup = 1000,
  iter_sampling = 1000,
  chains = 4,
  ...
)
}
\arguments{
\item{post.samples}{an object of class \code{draws_df}, \code{draws_matrix}, \code{matrix}, or \code{data.frame} giving posterior
samples of a GLM under LEAP, such as the output from \code{\link[=glm.leap]{glm.leap()}}. Each row corresponds
to the posterior samples obtained from one iteration of MCMC. The column names of \code{post.samples}
should include the names of covariates for regression coefficients, such as "(Intercept)",
and "dispersion" for the dispersion parameter, if applicable.}

\item{formula}{a two-sided formula giving the relationship between the response variable and covariates.}

\item{family}{an object of class \code{family}. See \code{\link[stats:family]{?stats::family}}.}

\item{data.list}{a list of \code{data.frame}s. The first element in the list is the current data, and the rest
are the historical data sets. For LEAP implementation, all historical data sets will be
stacked into one historical data set.}

\item{K}{the desired number of classes to identify. Defaults to 2.}

\item{prob.conc}{a scalar or a vector of length \code{K} giving the concentration parameters for Dirichlet prior.
If length == 2, a \code{beta(prob.conc[1], prob.conc[2])} prior is used. If a scalar is provided,
prob.conc will be a vector of repeated elements of the given scalar. Defaults to a vector of 1s.}

\item{offset.list}{a list of matrices giving the offset for current data followed by historical data. For each
matrix, the number of rows corresponds to observations and columns correspond to classes.
Defaults to a list of matrices of 0s. Note that the first element of offset.list (corresponding
to the offset for current data) should be a matrix of repeated columns if offset.list is not NULL.}

\item{beta.mean}{a scalar or a \verb{p x K} matrix of mean parameters for initial prior on regression coefficients,
where \code{p} is the number of regression coefficients (including intercept). If a scalar is provided,
beta.mean will be a matrix of repeated elements of the given scalar. Defaults to a matrix of 0s.}

\item{beta.sd}{a scalar or a \verb{p x K} matrix of sd parameters for the initial prior on regression coefficients,
where \code{p} is the number of regression coefficients (including intercept). If a scalar is provided,
same as for beta.mean. Defaults to a matrix of 10s.}

\item{disp.mean}{a scalar or a vector whose dimension is equal to the number of classes (\code{K}) giving the means for
the half-normal hyperpriors on the dispersion parameters. If a scalar is provided, disp.mean will
be a vector of repeated elements of the given scalar. Defaults to a vector of 0s.}

\item{disp.sd}{a scalar or a vector whose dimension is equal to the number of classes (\code{K}) giving the sds for
the half-normal hyperpriors on the dispersion parameters. If a scalar is provided, same as for
disp.mean. Defaults to a vector of 10s.}

\item{bridge.args}{a \code{list} giving arguments (other than samples, log_posterior, data, lb, ub) to pass
onto \code{\link[bridgesampling:bridge_sampler]{bridgesampling::bridge_sampler()}}.}

\item{iter_warmup}{number of warmup iterations to run per chain. Defaults to 1000. See the argument \code{iter_warmup} in
\code{sample()} method in cmdstanr package.}

\item{iter_sampling}{number of post-warmup iterations to run per chain. Defaults to 1000. See the argument \code{iter_sampling}
in \code{sample()} method in cmdstanr package.}

\item{chains}{number of Markov chains to run. Defaults to 4. See the argument \code{chains} in \code{sample()} method in
cmdstanr package.}

\item{...}{arguments passed to \code{sample()} method in cmdstanr package (e.g. seed, refresh, init).}
}
\value{
The function returns a \code{list} with the following objects

\describe{
\item{model}{"LEAP"}

\item{logml}{the estimated logarithm of the marginal likelihood}

\item{bs}{an object of class \code{bridge} or \code{bridge_list} giving the output from
\code{\link[bridgesampling:bridge_sampler]{bridgesampling::bridge_sampler()}} using all data sets (including current and historical data)}

\item{bs.hist}{an object of class \code{bridge} or \code{bridge_list} giving the output from
\code{\link[bridgesampling:bridge_sampler]{bridgesampling::bridge_sampler()}} using historical data sets (for computing the log normalizing
constant for LEAP)}

}
}
\description{
Uses Markov chain Monte Carlo (MCMC) and bridge sampling to estimate the logarithm of the marginal
likelihood of a GLM under LEAP.
}
\details{
This function shares the same arguments as \code{\link[=glm.leap]{glm.leap()}}, while introducing two additional
parameters: \code{post.samples} and \code{bridge.args}. \code{post.samples} provides posterior samples under LEAP
(e.g., the output from \code{\link[=glm.leap]{glm.leap()}}), whereas \code{bridge.args} specifies arguments to pass onto
\code{\link[bridgesampling:bridge_sampler]{bridgesampling::bridge_sampler()}} (other than \code{samples}, \code{log_posterior}, \code{data}, \code{lb}, and \code{ub}).

It is important to ensure that the values assigned to the shared arguments (excluding those relevant
for MCMC sampling) in this function and \code{\link[=glm.leap]{glm.leap()}} match with those used in generating
\code{post.samples}. The arguments pertinent to MCMC sampling are utilized to compute the normalizing
constants for LEAP.
}
\examples{
if (instantiate::stan_cmdstan_exists()) {
  data(actg019)
  data(actg036)
  ## take subset for speed purposes
  actg019   = actg019[1:100, ]
  actg036   = actg036[1:50, ]
  formula   = outcome ~ scale(age) + race + treatment + scale(cd4)
  family    = binomial('logit')
  data_list = list(currdata = actg019, histdata = actg036)
  d.leap    = glm.leap(
    formula = formula,
    family = family,
    data.list = data_list,
    K = 2,
    chains = 1, iter_warmup = 500, iter_sampling = 1000
  )
  glm.logml.leap(
    post.samples = d.leap,
    formula = formula, family = family,
    data.list = data_list,
    K = 2,
    bridge.args = list(silent = TRUE),
    chains = 1, iter_warmup = 1000, iter_sampling = 2000
  )
}
}
\references{
Alt, E. M., Chang, X., Jiang, X., Liu, Q., Mo, M., Xia, H. M., and Ibrahim, J. G. (2023). LEAP: The latent exchangeability prior for borrowing information from historical data. arXiv preprint.

Gronau, Q. F., Singmann, H., and Wagenmakers, E.-J. (2020). bridgesampling: An r package for estimating normalizing constants. Journal of Statistical Software, 92(10).
}
