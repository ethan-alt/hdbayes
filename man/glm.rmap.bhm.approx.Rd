% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/glm_rmap_bhm_approx.R
\name{glm.rmap.bhm.approx}
\alias{glm.rmap.bhm.approx}
\title{Second step for sampling from the posterior distribution of a GLM using the Robust Meta-Analytic Predictive (MAP)
Prior by Schmidli et al. See \code{glm_rmap_bhm.R} for the first step.}
\usage{
glm.rmap.bhm.approx(samples.bhm, G = NULL, ...)
}
\arguments{
\item{samples.bhm}{a matrix of the samples of regression coefficients from the prior induced by the BHM, output
from the \code{glm.rmap.bhm()} function.}

\item{G}{an integer vector giving the numbers of mixtures components (in the mixture approximation to
the BHM) for which the BIC is to be calculated. Defaults to 1:9. See the argument \code{G} in
\code{\link[mclust:Mclust]{?mclust::Mclust}}.}

\item{...}{arguments passed to \code{\link[mclust:Mclust]{mclust::Mclust()}}. See \url{https://mclust-org.github.io/mclust/reference/Mclust.html}.}
}
\value{
\if{html}{\out{<div class="sourceCode">}}\preformatted{             a list giving the parameters estimated from the optimal (according to BIC) mixture model
                     including the mixing proportions, the estimated mean and covariance matrix for each mixture
                     component. An object of class 'Mclust' from the mclust::Mclust() function is also included.
}\if{html}{\out{</div>}}
}
\description{
This function approximates the distribution of the output "beta_pred" from the \code{glm.rmap.bhm()} function (i.e.,
samples from the prior induced by the Bayesian Hierarchical Model (BHM)) by a mixture of multivariate normal
distributions. We use the \code{mclust} package by Scrucca et al. to implement the mixture approximation.
}
\examples{
if (instantiate::stan_cmdstan_exists()) {
  data(actg036) ## historical data
  ## take subset for speed purposes
  actg036 = actg036[1:100, ]
  hist_data_list = list(actg036)
  samples_bhm = glm.rmap.bhm(
    formula = cd4 ~ treatment + age + race,
    family = poisson('log'),
    hist.data.list = hist_data_list,
    chains = 1, iter_warmup = 1000, iter_sampling = 2000
  )$beta_pred
  glm.rmap.bhm.approx(
    samples.bhm = samples_bhm,
    G = 1:5, verbose = FALSE
  )
}
}
